// =====================================================
// AN√ÅLISIS DE INVENTARIO Y CLIENTES - LA TIENDA DEL BOROJ√ì
// =====================================================
//
// üìä ESCENARIO REAL: Como administrador de la tienda, necesitas
// analizar tu inventario y base de clientes para tomar decisiones
// de negocio inteligentes. ¬øQu√© productos se est√°n agotando?
// ¬øQu√© clientes necesitan atenci√≥n especial?
//
// üéØ OBJETIVO DE NEGOCIO: Obtener insights valiosos sobre tu
// inventario, clientes y tendencias de ventas para optimizar
// la gesti√≥n de la tienda.
//
// üí° IMPORTANTE: Ejecuta estos comandos uno por uno en mongosh para
// obtener informaci√≥n real de tu negocio.
// =====================================================

// =====================================================
// AN√ÅLISIS 1: PRODUCTOS CON STOCK SUFICIENTE
// =====================================================
//
// üì¶ SITUACI√ìN DE NEGOCIO: Necesitas identificar qu√© productos
// tienen stock suficiente para satisfacer la demanda de la semana.
// Los productos con m√°s de 20 unidades est√°n en buen estado.
//
// üí∞ IMPACTO EN VENTAS:
// - Productos con stock alto = ventas garantizadas
// - No hay riesgo de quedarte sin producto
// - Puedes hacer promociones con confianza
//
// üîç QU√â BUSCAMOS: Productos con stock mayor a 20 unidades
// - $gt significa "greater than" (mayor que)
// - Esto te da una lista de productos seguros para vender
//
// üìä RESULTADO ESPERADO: Deber√≠as ver productos como:
// - Boroj√≥ fresco (stock: 30) - Producto estrella
// - Jugo de boroj√≥ (stock: 50) - Muy popular
// - Galletas con boroj√≥ (stock: 40) - Snack de alta demanda
// - Compota de boroj√≥ (stock: 20) - L√≠mite m√≠nimo aceptable

db.productos.find({ "stock": { $gt: 20 } })

// =====================================================
// AN√ÅLISIS 2: CLIENTES QUE NECESITAN ATENCI√ìN
// =====================================================
//
// üë• SITUACI√ìN DE NEGOCIO: Identificar clientes que se registraron
// pero a√∫n no han realizado su primera compra. Estos son clientes
// potenciales que necesitan atenci√≥n especial para convertirlos.
//
// üéØ ESTRATEGIA DE RETENCI√ìN:
// - Clientes sin compras = oportunidades de venta
// - Puedes enviar ofertas especiales
// - Necesitan motivaci√≥n para su primera compra
// - Son candidatos para programas de fidelizaci√≥n
//
// üîç QU√â BUSCAMOS: Clientes con array de compras vac√≠o
// - $size: 0 significa que no han comprado nada
// - Esto identifica clientes nuevos o inactivos
// - √ötil para campa√±as de marketing dirigidas
//
// üìä RESULTADO ESPERADO: Deber√≠as ver clientes como:
// - Mario Mendoza (cliente nuevo registrado hoy)
// - Otros clientes que no han comprado a√∫n
// - Lista para estrategias de activaci√≥n

db.clientes.find({ "compras": { $size: 0 } })

// =====================================================
// CONSULTAS ADICIONALES √öTILES PARA LA TIENDA
// =====================================================
//
// Estas consultas te ayudar√°n a gestionar mejor tu negocio
// y entender el comportamiento de tus clientes y productos.

// =====================================================
// CONSULTA 3: PRODUCTOS POR CATEGOR√çA
// =====================================================
//
// DESCRIPCI√ìN: Filtrar productos por categor√≠a espec√≠fica
//
// PASO A PASO:
// 1. Buscamos productos donde "categoria" sea exactamente "Bebida"
// 2. No usamos operadores, solo igualdad exacta
// 3. √ötil para mostrar productos por secci√≥n en la tienda
//
// RESULTADO ESPERADO: Deber√≠as ver:
// - Jugo de boroj√≥
// - Concentrado de boroj√≥
// - Cerveza artesanal de boroj√≥

db.productos.find({ "categoria": "Bebida" })

// =====================================================
// CONSULTA 4: CLIENTES CON PREFERENCIAS ESPEC√çFICAS
// =====================================================
//
// DESCRIPCI√ìN: Encontrar clientes que prefieren productos naturales
//
// PASO A PASO:
// 1. Buscamos en el array "preferencias"
// 2. MongoDB autom√°ticamente busca en arrays
// 3. Encuentra documentos donde "natural" est√© en el array
//
// RESULTADO ESPERADO: Deber√≠as ver clientes como:
// - Carlos Ram√≠rez
// - Diana Su√°rez
// - Felipe Castro
// - Valentina Ortiz

db.clientes.find({ "preferencias": "natural" })

// =====================================================
// CONSULTA 5: PRODUCTOS DE PRECIO ALTO
// =====================================================
//
// DESCRIPCI√ìN: Identificar productos premium (precio > 8000)
//
// PASO A PASO:
// 1. Usamos $gt (mayor que) en el campo precio
// 2. 8000 es el umbral para productos premium
// 3. √ötil para estrategias de precios y marketing
//
// RESULTADO ESPERADO: Deber√≠as ver productos como:
// - Mermelada de boroj√≥ (8500)
// - Helado de boroj√≥ (10000)
// - Concentrado de boroj√≥ (12000)
// - Aceite de boroj√≥ (15000)

db.productos.find({ "precio": { $gt: 8000 } })

// =====================================================
// CONSULTA 6: AN√ÅLISIS POR CATEGOR√çA (AGGREGATION)
// =====================================================
//
// DESCRIPCI√ìN: Contar cu√°ntos productos hay por cada categor√≠a
//
// PASO A PASO:
// 1. Usamos aggregate() para operaciones complejas
// 2. $group agrupa documentos por campo espec√≠fico
// 3. $sum: 1 cuenta documentos en cada grupo
// 4. _id: "$categoria" especifica el campo de agrupaci√≥n
//
// RESULTADO ESPERADO: Deber√≠as ver algo como:
// { "_id": "Fruta", "total": 2 }
// { "_id": "Bebida", "total": 3 }
// { "_id": "Snack", "total": 2 }
// etc.

db.productos.aggregate([
  { $group: { _id: "$categoria", total: { $sum: 1 } } }
])

// =====================================================
// RESUMEN DE LO APRENDIDO
// =====================================================
//
// ‚úÖ find(): Para consultar documentos
// ‚úÖ Operadores de comparaci√≥n: $gt, $lt, $gte, $lte
// ‚úÖ Operadores de arrays: $size
// ‚úÖ Filtros simples: igualdad exacta
// ‚úÖ aggregate(): Para consultas complejas y an√°lisis
// ‚úÖ $group: Para agrupar y contar documentos
//
