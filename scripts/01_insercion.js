// =====================================================
// GESTI√ìN DE INVENTARIO Y CLIENTES - LA TIENDA DEL BOROJ√ì
// =====================================================
// 
// üåø ESCENARIO REAL: Est√°s administrando una tienda de productos
// derivados del boroj√≥ en el Pac√≠fico colombiano. Necesitas agregar
// nuevos productos al cat√°logo y registrar nuevos clientes que
// llegan a la tienda.
//
// üéØ OBJETIVO DE NEGOCIO: Mantener el inventario actualizado y
// expandir la base de clientes para aumentar las ventas.
//
// üí° IMPORTANTE: Ejecuta estos comandos uno por uno en mongosh para
// simular operaciones reales de tu tienda.
// =====================================================

// =====================================================
// SITUACI√ìN 1: NUEVO PRODUCTO LLEGA A LA TIENDA
// =====================================================
// 
// üì¶ ESCENARIO: Un proveedor local acaba de traer "Chocolatinas de boroj√≥"
// que son perfectas para el mercado escolar. Necesitas agregarlas al
// inventario para que los clientes puedan comprarlas.
//
// üí∞ AN√ÅLISIS DE NEGOCIO:
// - Precio competitivo: $4,000 (ideal para estudiantes)
// - Stock inicial: 35 unidades (para probar la demanda)
// - Categor√≠a: Snack (secci√≥n de mayor rotaci√≥n)
// - Tags: "dulce" y "energ√≠a" (atractivo para j√≥venes)
//
// üîß PASO A PASO:
// 1. Usamos insertOne() para agregar el producto al cat√°logo
// 2. Asignamos _id: 11 para mantener orden en el inventario
// 3. Estructuramos todos los campos necesarios para la venta
// 4. Los tags ayudan a los clientes a encontrar el producto
//
// ‚úÖ RESULTADO ESPERADO: Confirmaci√≥n de que el producto se agreg√≥
// al cat√°logo. Ahora los clientes pueden comprarlo.

db.productos.insertOne({
  "_id": 11,
  "nombre": "Chocolatina de boroj√≥",
  "categoria": "Snack",
  "precio": 4000,
  "stock": 35,
  "tags": ["dulce", "energ√≠a"]
})

// =====================================================
// SITUACI√ìN 2: NUEVO CLIENTE REGISTRADO EN LA TIENDA
// =====================================================
//
// üë§ ESCENARIO: Mario Mendoza acaba de entrar a la tienda por primera vez.
// Es un deportista local que busca productos energ√©ticos y naturales.
// Necesitas registrarlo en el sistema para hacer seguimiento de sus compras.
//
// üéØ PERFIL DEL CLIENTE:
// - Deportista activo (busca productos energ√©ticos)
// - Consumidor consciente (prefiere productos naturales)
// - Cliente potencial de alto valor (compras frecuentes)
// - Sin historial previo (nuevo en la tienda)
//
// üîß PASO A PASO:
// 1. Creamos el perfil del cliente con _id √∫nico (11)
// 2. Array de compras vac√≠o [] porque es su primera visita
// 3. Preferencias basadas en su estilo de vida
// 4. Usamos insertOne() para agregarlo a la base de clientes
//
// ‚úÖ RESULTADO ESPERADO: Mario Mendoza queda registrado en el sistema.
// Ahora puedes hacer seguimiento de sus compras y preferencias.

db.clientes.insertOne({
  "_id": 11,
  "nombre": "Mario Mendoza",
  "email": "mario@email.com",
  "compras": [],
  "preferencias": ["energ√©tico", "natural"]
})

// =====================================================
// VERIFICACI√ìN DE OPERACIONES - CONTROL DE CALIDAD
// =====================================================
//
// üîç IMPORTANTE: En una tienda real, siempre debes verificar que
// las operaciones se realizaron correctamente. Esto evita errores
// en el inventario y problemas con los clientes.
//
// üìã PASO 1: Verificar que el producto se agreg√≥ al cat√°logo
// - Buscamos por _id: 11 para encontrar "Chocolatinas de boroj√≥"
// - Deber√≠as ver todos los detalles del producto en pantalla
// - Esto confirma que est√° disponible para la venta

db.productos.find({"_id": 11})

// PASO 2: Verificar que el cliente se insert√≥
// - Buscamos por _id: 11 para encontrar el cliente espec√≠fico
// - Deber√≠as ver el documento completo del cliente

db.clientes.find({"_id": 11})

// =====================================================
// CONTEO FINAL DE DOCUMENTOS
// =====================================================
//
// PASO 3: Contar total de productos
// - Deber√≠as ver 11 productos (10 originales + 1 nuevo)
// - Esto confirma que la inserci√≥n fue exitosa

db.productos.countDocuments()

// PASO 4: Contar total de clientes
// - Deber√≠as ver 11 clientes (10 originales + 1 nuevo)
// - Esto confirma que la inserci√≥n fue exitosa

db.clientes.countDocuments()

// =====================================================
// RESUMEN DE OPERACIONES REALIZADAS
// =====================================================
//
// üéØ LO QUE ACABAS DE HACER:
// ‚úÖ Agregaste "Chocolatinas de boroj√≥" al cat√°logo de productos
// ‚úÖ Registraste a Mario Mendoza como nuevo cliente
// ‚úÖ Verificaste que ambas operaciones fueron exitosas
// ‚úÖ Confirmaste el total actualizado de productos y clientes
//
// üíº IMPACTO EN TU NEGOCIO:
// - Nuevo producto disponible para venta
// - Cliente potencial registrado en el sistema
// - Inventario actualizado y organizado
// - Base de datos sincronizada
//
// üöÄ PR√ìXIMO PASO: Ahora puedes continuar con otras operaciones
// como consultas de inventario, actualizaciones de stock, o
// an√°lisis de ventas para tomar decisiones de negocio.
